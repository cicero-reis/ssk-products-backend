version: "3.8"

networks:
  product_network:
    name: product_network
    driver: bridge

volumes:
  product_mysql:
    name: product_mysql
    driver: local
  product_localstack:
    name: product_localstack
    driver: local

services:
  app:
    image: self-service-kiosks-app:latest
    container_name: app
    restart: unless-stopped
    environment:
      - TZ=America/Sao_Paulo=value
    working_dir: /var/www/
    volumes:
      - ./:/var/www
    depends_on:
      - mysql
      - nginx
    networks:
      - product_network

  nginx:
    image: self-service-kiosks-nginx:latest
    container_name: nginx
    restart: unless-stopped
    ports:
      - "5000:80"
    volumes:
      - ./:/var/www
    networks:
      - product_network

  mysql:
    image: mysql:8.0
    container_name: database
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_TIMEZONE: 'America/Sao_Paulo'
    command: --default-time-zone='America/Sao_Paulo'
    ports:
      - ${DB_PORT}:${DB_PORT}
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - product_mysql:/var/lib/mysql
    networks:
      - product_network

  localstack:
    image: localstack/localstack
    container_name: aws_localstack
    ports:
      - "127.0.0.1:4566:4566" # LocalStack Gateway
      - "127.0.0.1:4510-4559:4510-4559" # external services port range
    environment:
      - DEBUG=${DEBUG:-0}
    volumes:
      - product_localstack:/var/lib/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks: 
      - product_network
